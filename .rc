# .rc
#
# Shell agnostic non-login configuration.

### General

set -o vi
PROMPT_COMMAND="history -a;"

### Aliases

# commands
alias ls='ls --color=never'
alias sl='ls'
alias less='less -R'
alias grep='grep --color=always'
alias egrep='egrep --color=always'
alias rm='rm -i'
alias firefox='firefox -new-window'
alias chromium='chromium --incognito'

# shortcuts
alias ipext='curl -s icanhazip.com'
alias dateo='date +%Y%m%d%H%M%S'
alias django='python manage.py'
alias srv='python -m SimpleHTTPServer'
alias hn='history -n 2> /dev/null'
alias nl='netstat -ltnp'
alias view='vim -R'
alias xs='xclip -o | xclip -sel clip'

# home_priv
alias mutt='mutt -F $HOME_PRIV/.muttrc'
alias gpg='gpg --homedir $HOME_PRIV/.gnupg'

### Functions

# find all files with names containing a string
fn() {
  find . -name "*$1*"
}

# pause for an enter
pause() {
  if grep 'bash' <<< $(echo $SHELL); then
    read -p "Press enter to continue."
  else
    read \?"Press enter to continue."
  fi
}

# download a website for offline use
dlweb() {
  wget \
    --recursive \
    --no-clobber \
    --page-requisites \
    --adjust-extension \
    --convert-links \
    --domains "$1" \
    --tries=10 \
    "$1"
}

# billythewitchdoctor.com
arise() {
  if [ "$1" = "chicken" ]; then
    if [ "arise" = "$2" ]; then echo 'arise chicken';
    else echo 'arise chicken arise'; fi
    return 0
  fi
  if [ "arise" != "$2" ]; then
    echo 'hold on, stick upside-down'
    return 1;
  fi
  if command -v $1 &>/dev/null; then
    $1&
  fi
}

# name-only diff between local and remote filesystems
function rdiff() {
  if (( $# < 2 )); then
    echo "Usage: rdiff <source> <dest> [args]";
    return 1;
  fi

  local source=$1;
  local dest=$2;
  shift && shift

  local passargs=
  (( $# > 0 )) && passargs="$@"

  while read line; do
    echo "> $(awk -F ' ' '{ print $2 }' <<< $(echo $line))"
  done <<< \
    "$(rsync -rLk --no-motd --size-only --itemize-changes --dry-run \
      $passargs $dest $source)"

  while read line; do
    echo "< $(awk -F' ' '{ print $2 }' <<< $(echo $line))"
  done <<< \
    "$(rsync -rLk --no-motd --size-only --itemize-changes --dry-run \
    $passargs $source $dest)"
}

# rsync between two remote hosts
function rrsync() {
  if (( $# < 2 )); then
    echo "Usage: rrsync <source> <dest> [args]";
    return 1;
  fi

  local source=$1
  local dest=$2
  shift && shift

  mkdir -p /tmp/rrsync
  rsync $@ $source /tmp/rrsync
  rsync $@ /tmp/rrsync/ $dest
}

### Source

for f in $HOME/.rc.d/*; do . $f; done
