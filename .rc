# .rc
#
# Shell agnostic non-login configuration.

### General

set -o vi
PROMPT_COMMAND="history -a;"
[[ $TERM == "rxvt-unicode-256color" ]] && \
  trap 'echo -ne "\033]0;${USER}@${HOSTNAME}\007"' DEBUG

### Sources

### Aliases

# commands
alias ls='ls --color=never'
alias less='less -R'
alias grep='grep --color=always'
alias egrep='egrep --color=always'
alias rm='rm -i'
alias steam='STEAM_RUNTIME=1 steam'
alias firefox='firefox -new-window'
alias chromium='chromium --incognito'

# shortcuts
alias unmerge='emerge --unmerge'
alias ipext='curl -s icanhazip.com'
alias dateo='date +%Y%m%d%H%M%S'
alias django='python manage.py'
alias srv='python -m SimpleHTTPServer'
alias gd='git diff --full-index master HEAD'
alias gh='history -n 2> /dev/null'
alias nl='netstat -ltnp'
alias view='vim -R'

### Functions

# pause for an enter
function pause() {
  if grep 'bash' <<< $(echo $SHELL); then
    read -p "Press enter to continue."
  else
    read \?"Press enter to continue." 
  fi
}

# downloads a website for offline use
function dlweb() {
  wget \
    --recursive \
    --no-clobber \
    --page-requisites \
    --adjust-extension \
    --convert-links
    --domains "$1"
    --tries=10
    "$1"
}

# billythewitchdoctor.com
function arise() {
  if [ "$1" = "chicken" ]; then
    if [ "arise" = "$2" ]; then echo 'arise chicken';
    else echo 'arise chicken arise'; fi
    return 0
  fi
  if [ "arise" != "$2" ]; then
    echo 'hold on, stick upside-down'
    return 1;
  fi
  if command -v $1 &>/dev/null; then
    $1&
  fi
}

# runs a name-only diff between local and remote filesystems
function rdiff() {
  if (( $# < 2 )); then
    echo "Usage: rdiff <source> <dest> [args]";
    return 1;
  fi

  local source=$1;
  local dest=$2;
  shift && shift

  local passargs=
  (( $# > 0 )) && passargs="$@"

  while read line; do
    echo "> $(awk -F ' ' '{ print $2 }' <<< $(echo $line))"
  done <<< \
    "$(rsync -rLk --no-motd --size-only --itemize-changes --dry-run \
      $passargs $dest $source)"

  while read line; do
    echo "< $(awk -F' ' '{ print $2 }' <<< $(echo $line))"
  done <<< \
    "$(rsync -rLk --no-motd --size-only --itemize-changes --dry-run \
    $passargs $source $dest)"
}

### Wordpress

alias wp='$HOME/.wp-cli/bin/wp'
alias wp_addme='wp user create mcoleman mcoleman@wayfair.com --role=administrator --user_pass=tgtuelij2lablir'

# reset wordpress hostname
function wp_url() {
  [[ -z $1 ]] && return 1

  local sql=/tmp/wp.out.sql
  local old_url=`wp option get siteurl`
  local new_url=$1

  wp db export $sql && \
  sed -i "s,$old_url,$new_url,g" $sql && \
  wp db import $sql
}

### Puppet

alias pa='sudo puppet agent'
alias pt='pa -t'
alias pen='pa --enable'
alias pdn='pa --disable'

# runs puppet with an optional environment
function pr() {
  local environment="production"
  [ -n "$1" ] && environment="$1"

  pt --environment="${environment}"
}

# freezes puppet into an optional environment
function pe() {
  local environment="production"
  [ -n "$1" ] && environment=$1 && shift

  local passargs=
  (( $# > 0 )) && passargs="$@"

  pen && \
  pt --environment=${environment} ${passargs}
  pdn
}
